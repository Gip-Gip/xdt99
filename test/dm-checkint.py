#!/usr/bin/env python

import shutil
import os

from config import Dirs, Disks, Files
from utils import xdm, error, checkFilesEq


### Check functions

def checkRecordsByChecksum(infile, reclen, fixed):
    """check if internal records match reference format"""
    reccount = 1024 / reclen
    with open(infile, "rb") as f:
        data = f.read()
    if len(data) != reccount * reclen:
        error("INT Records", "%s: File length mismatch: %d != %d" % (
            infile, len(data), reccount * reclen))
    p = 0
    for i in xrange(reccount):
        l = ord(data[p])
        if l != reclen - 1:
            error("INT Records", "%s: Record checksum mismatch: %d != %d" % (
                infile, l, reclen - 1))
        for j in xrange(1, reclen):
            s = (i + 1 if j == 1 else j - 2) % 256
            if ord(data[p + j]) != s:
                error("INT Records", "%s: Record contents mismatch at %d" % (
                    infile, p + j))
        p += reclen if fixed else l + 1


### Main test

def runtest():
    """extract INT record files generated by DMWRINT.xb"""

    # setup
    shutil.copyfile(Disks.recsint, Disks.work)

    # read full-size records
    for reclen in [2, 64, 127, 128, 254, 255]:
        xdm(Disks.work, "-e", "IF" + str(reclen), "-o", Files.output)
        checkRecordsByChecksum(Files.output, reclen, True)
        xdm(Disks.work, "-e", "IV" + str(reclen), "-o", Files.output)
        checkRecordsByChecksum(Files.output, reclen, False)

    # read partially filled records
    xdm(Disks.work, "-e", "IF64V", "-o", Files.output)
    checkFilesEq("INT Records", Files.output,
                 os.path.join(Dirs.refs, "if64v.txt"), "INT/FIX64")
    # 32, 1, 0 .. 30, 0 x 31; 0 x 64; 34, 3, 0 .. 32, 0 x 29
    xdm(Disks.work, "-e", "IV64V", "-o", Files.output)
    checkFilesEq("INT Records", Files.output,
                 os.path.join(Dirs.refs, "iv64v.txt"), "INT/VAR64")
    # 32, 1, 0 .. 30, 0

    # re-write extracted records and check
    for reclen in [2, 64, 127, 128, 254, 255]:
        xdm(Disks.work, "-e", "IF" + str(reclen), "-o", Files.reference)
        xdm(Disks.work, "-a", Files.reference, "-n", "CF" + str(reclen),
            "-f", "INT/FIX" + str(reclen))
        xdm(Disks.work, "-e", "CF" + str(reclen), "-o", Files.output)
        checkFilesEq("INT Records", Files.output, Files.reference,
                     "INT/FIX" + str(reclen))
        xdm(Disks.work, "-e", "IV" + str(reclen), "-o", Files.reference)
        xdm(Disks.work, "-a", Files.reference, "-n", "CV" + str(reclen),
            "-f", "INT/VAR" + str(reclen))
        xdm(Disks.work, "-e", "CV" + str(reclen), "-o", Files.output)
        checkFilesEq("INT Records", Files.output, Files.reference,
                     "INT/VAR" + str(reclen))

    # cleanup
    os.remove(Files.output)
    os.remove(Files.reference)
    os.remove(Disks.work)


if __name__ == "__main__":
    runtest()
